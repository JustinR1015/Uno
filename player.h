#ifndef UNO_PLAYER_H_
#define UNO_PLAYER_H_

#include <vector>
#include <string>

#include "card.h"

class Game;

class Player {
 public:
  //////////////////////////////////////////////////////////////////////////////
  Player(const std::string& name = ""):name_(name) {};
  //////////////////////////////////////////////////////////////////////////////
  Player& operator=(const Player& rhs) {
    name_ = rhs.GetName();
    hand_ = rhs.GetHand();
    game_ = rhs.game_;
    requested_suit_ = rhs.requested_suit_;
  };
  //////////////////////////////////////////////////////////////////////////////
  void Init(Game* game);
  //////////////////////////////////////////////////////////////////////////////
  void TakeTurn(const UnoCard& top_of_discard, const UnoSuit& requested_suit);
  //////////////////////////////////////////////////////////////////////////////
  void AddCardToHand(const UnoCard& card);
  //////////////////////////////////////////////////////////////////////////////
  void PrintHand() const;
  //////////////////////////////////////////////////////////////////////////////
  int GetHandSize() const { return hand_.size(); }
  //////////////////////////////////////////////////////////////////////////////
  std::vector<UnoCard> GetHand() const { return hand_; }
  //////////////////////////////////////////////////////////////////////////////
  std::string GetName() const { return name_; }
  //////////////////////////////////////////////////////////////////////////////
  UnoSuit GetRequestedSuit() const { return requested_suit_; }
  //////////////////////////////////////////////////////////////////////////////
  void RemoveCardFromHand(const UnoCard& card);
  //////////////////////////////////////////////////////////////////////////////
  UnoSuit FindMostCommonSuit() const;
  //////////////////////////////////////////////////////////////////////////////
  bool operator==(const Player& rhs) const { return rhs.GetName() == name_;};
  //////////////////////////////////////////////////////////////////////////////
  bool operator!=(const Player& rhs) const { return !(rhs == *this);};
  //////////////////////////////////////////////////////////////////////////////
  void ClearHand() { hand_.clear(); };
 protected:
  std::vector<UnoCard> hand_;
  std::string name_;
  Game* game_;
  UnoSuit requested_suit_{kUninitializedSuit};
};

#endif // UNO_PLAYER_H_
